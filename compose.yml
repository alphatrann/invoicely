name: invoicely
services:
  # === Database ===
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  frontend:
    build:
      context: .
    container_name: frontend
    command: sh -c "yarn db:generate && yarn db:migrate && yarn start"
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - app_network
    expose:
      - "3000"

  caddy:
    image: caddy:2
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
    networks:
      - app_network

  posthog:
    image: posthog/posthog:latest
    container_name: posthog
    restart: always
    depends_on:
      - posthog-db
      - posthog-redis
    env_file:
      - posthog.env
    ports:
      - "8000:8000"
    volumes:
      - posthog_data:/app/data
    networks:
      - app_network

  posthog-db:
    image: postgres:16
    container_name: posthog-db
    restart: always
    env_file:
      - posthog.env
    volumes:
      - posthog_db_data:/var/lib/postgresql/data
    networks:
      - app_network

  posthog-redis:
    image: redis:7-alpine
    container_name: posthog-redis
    restart: always
    volumes:
      - posthog_redis_data:/data
    networks:
      - app_network

  posthog-clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: posthog-clickhouse
    restart: always
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - posthog_clickhouse_data:/var/lib/clickhouse
    networks:
      - app_network

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  posthog_data:
  posthog_db_data:
  posthog_redis_data:
  posthog_clickhouse_data:

networks:
  app_network:
    driver: bridge
