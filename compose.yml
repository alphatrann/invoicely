name: invoicely
services:
  # === Database ===
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Admin console
    volumes:
      - minio_data:/data
    networks:
      - app_network

  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5 &&
        mc alias set local http://minio:9000 minio minio123 &&
        mc mb -p local/invoicely || true &&
        mc anonymous set download local/invoicely
      "
    networks:
      - app_network

  frontend:
    build:
      context: .
    container_name: frontend
    command: sh -c "yarn db:generate && yarn db:migrate && yarn start"
    env_file:
      - .env
    networks:
      - app_network
    depends_on:
      - postgres
    expose:
      - "3000"
    restart: always

  caddy:
    image: caddy:2
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
    networks:
      - app_network

volumes:
  postgres_data:
  minio_data:
  caddy_data:
  caddy_config:

networks:
  app_network:
    driver: bridge
